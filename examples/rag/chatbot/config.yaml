##############################################
# Chatbot Service Configuration
##############################################

# System-wide settings
system:
  log_level: INFO
  request_id_header: X-Request-ID
  environment: development

# Security settings
security:
  api_keys:
    - name: default
      key: "${API_KEY}"
      roles:
        - user
    - name: admin
      key: "${ADMIN_API_KEY}"
      roles:
        - user
        - admin
  rate_limiting:
    enabled: true
    provider: local
    requests: 100
    period_seconds: 60

# Cache settings
cache:
  enabled: true
  provider: local
  default_ttl_seconds: 3600
  max_size: 10000
  cleanup_interval_seconds: 300

# Chatbot API settings
chatbot:
  port: 8001
  host: 0.0.0.0
  workers: 4
  retrieval:
    vector_store:
      type: pgvector
      connection_string: "postgresql://localhost:5432/postgres"
      table_name: "document_embeddings"
      dimension: 384  # Must match embedding model dimension
      index_method: "hnsw"  # Options: ivfflat, hnsw
    top_k: 5
    similarity_threshold: 0.7
  reranking:
    enabled: true
    type: custom  # Options: custom, cross_encoder
    model_name: cross-encoder/ms-marco-MiniLM-L-6-v2  # Only used for cross_encoder type
    top_k: 3
    score_threshold: 0.5
    # Custom reranker weights
    keyword_weight: 0.3
    tfidf_weight: 0.4
    length_weight: 0.2
    position_weight: 0.1
    min_score_threshold: 0.0
  generation:
    # Switch between "vertex", "openai", and "groq"
    provider: groq
    # Vertex AI settings - model only
    # project_id and location loaded directly from environment variables
    model: meta-llama/llama-4-scout-17b-16e-instruct
    # model: gemini-1.5-pro
    temperature: 0.2
    max_output_tokens: 1024
    top_p: 0.95
    # Groq settings (as fallback)
    api_key: "${GROQ_API_KEY}"
    templates_dir: config/prompts/chatbot
    template: rag_prompt.jinja2
  memory:
    # Memory type: "simple", "mem0", or "langgraph"
    type: langgraph
    # LangGraph memory settings
    store_type: in_memory  # "in_memory" or "postgres"
    embedding_dimensions: 384
    max_history: 20
    # PostgreSQL settings (only used if store_type is "postgres")
    postgres:
      connection_string: "postgresql://localhost:5432/postgres"
    # Legacy settings for simple memory
    max_messages: 20
    message_expiry_minutes: 60
    max_sessions: 1000
