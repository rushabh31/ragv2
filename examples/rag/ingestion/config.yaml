# RAG Ingestion Configuration
# Fixed structure to match actual code implementation

# Vision model configuration (used by VisionParser via factory)
# VisionParser reads from system-level "vision" config via ConfigManager
vision:
  provider: vertex_ai                   # Options: vertex_ai, groq
  config:
    model: gemini-1.5-pro-002          # Vision model name
    region: us-central1                 # GCP region for Vertex AI
    # project_id loaded from environment variable PROJECT_ID

# Generation model configuration (used by SemanticChunker via factory)
# SemanticChunker reads from system-level "generation" config via ConfigManager
generation:
  provider: vertex                      # Options: vertex, anthropic_vertex, openai, azure_openai
  config:
    model_name: gemini-2.5-pro     # Generation model name
    temperature: 0.1                    # Generation temperature
    max_tokens: 2048                    # Maximum tokens
    top_p: 0.95                         # Top-p sampling parameter

# Embedding model configuration (used by VertexEmbedder via factory)
# VertexEmbedder reads from system-level "embedding" config via ConfigManager
embedding:
  provider: vertex_ai                   # Options: vertex_ai, vertex, openai_universal, openai, azure_openai
  config:
    model: text-embedding-005           # Embedding model name (768 dimensions)
    batch_size: 100                     # Batch size for API calls

# Ingestion pipeline configuration
ingestion:
  # Parser configuration
  parser:
    provider: vision_parser             # Options: vision_parser, simple_text, groq_vision_parser, openai_vision
    config:
      # VisionParser-specific settings (model comes from vision.config above)
      max_pages: 100                    # Maximum pages to process per document
      max_concurrent_pages: 5           # Number of pages to process in parallel
  
  # Chunking configuration
  chunking:
    strategy: page_based                # Options: fixed_size, page_based, semantic
    
    # Fixed Size Chunker parameters
    chunk_size: 1000                    # Target size of each chunk in characters
    chunk_overlap: 200                  # Overlap between chunks in characters
    
    # Page Based Chunker parameters
    min_chunk_size: 100                 # Minimum size of a chunk in characters
    use_headers_fallback: true          # Use headers as fallback if no page numbers found
    
    # Semantic Chunker parameters
    max_chunk_size: 1500                # Maximum size of each chunk in characters
    min_chunk_size_semantic: 300        # Minimum size for semantic chunks
    use_llm_boundary: false             # Whether to use LLM to determine optimal chunk boundaries
  
  # Processing configuration
  processing:
    max_concurrent_documents: 5         # Maximum concurrent document processing
    retry_attempts: 3                   # Number of retry attempts
    retry_delay_seconds: 1              # Delay between retries
    max_chunks_per_document: 100        # Maximum chunks per document

# Vector Store Configuration
vector_store:
  provider: "faiss"             # Options: "faiss", "pgvector", "chromadb"
  config:
    dimension: 768                      # Must match embedding model dimension (text-embedding-004 = 768)
    index_type: "HNSW"                  # Options: "Flat", "HNSW", "IVF"
    index_path: "./data/faiss_index.bin"
    metadata_path: "./data/faiss_metadata.pkl"

# API Configuration
api:
  host: "0.0.0.0"               # API host
  port: 8000                    # API port
  cors_origins: ["*"]           # CORS allowed origins
  api_key_required: true        # Whether API key is required

# Logging Configuration
logging:
  level: "INFO"                 # Options: "DEBUG", "INFO", "WARNING", "ERROR"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Health Check Configuration
health_check:
  enabled: true                 # Enable health checks
  interval_seconds: 30          # Health check interval
  timeout_seconds: 10           # Health check timeout

# Authentication Health Monitoring
auth_monitoring:
  enabled: true                 # Enable auth monitoring
  log_health_status: true       # Log auth health status
  validate_on_startup: true     # Validate auth on startup

# Processing Configuration
processing:
  max_concurrent_documents: 5   # Maximum concurrent document processing
  retry_attempts: 3             # Number of retry attempts
  retry_delay_seconds: 1        # Delay between retries
